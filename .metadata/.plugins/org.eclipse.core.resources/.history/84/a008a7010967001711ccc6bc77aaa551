package com.example.service;

import java.util.concurrent.ExecutionException;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.kafka.support.SendResult;
import org.springframework.stereotype.Service;
import org.springframework.util.concurrent.ListenableFuture;
import com.example.model.KafkaInputMessage;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

@Service
public class KafkaService {
	protected Logger logger = LoggerFactory.getLogger(this.getClass());

	@Value("${topic.name}")
	private String topicName;

	@Autowired
	private ObjectMapper objectMapper;

	@Autowired
	private KafkaTemplate<String, String> kafkaTemplate;

	public void sendMessageToKafkaTopic(KafkaInputMessage kakfaInputOrderMessage)
			throws JsonProcessingException, InterruptedException, ExecutionException {
		String jsonMessage = objectMapper.writeValueAsString(kakfaInputOrderMessage);
		ListenableFuture<SendResult<String, String>> kafkaResult = kafkaTemplate.send(topicName, jsonMessage);
		SendResult<String, String> sendResult = kafkaResult.get();
		logger.info("Message: " + sendResult.getProducerRecord() + " has been sent to topic " + topicName);
	}

}
